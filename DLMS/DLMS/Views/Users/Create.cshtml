@model DLMS.Models.User

@{
    ViewBag.Title = "Register";
}

<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <span class="login100-form-title p-b-26">
                    Welcome User
                </span>
                <span class="login100-form-title p-b-48">
                    <i class="zmdi zmdi-font"></i>
                </span>

                <div class="wrap-input100 validate-input">
                    @Html.TextBoxFor(model => model.firstname, new { placeholder = "Enter First name", htmlAttributes = new { @class = "input100" } })
                </div>
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })

                <div class="wrap-input100 validate-input">
                    @Html.TextBoxFor(model => model.lastname, new { placeholder = "Enter Last name", htmlAttributes = new { @class = "input100" } })
                </div>
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })




                <div class="wrap-input100 validate-input">
                    @Html.TextBoxFor(model => model.email, new { placeholder = "Enter Email", htmlAttributes = new { @class = "input100" } })
                </div>
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                <div class="wrap-input100 validate-input">
                    @Html.TextBoxFor(model => model.mobile_no, new { placeholder = "Enter Mobile Number", htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.mobile_no, "", new { @class = "text-danger" })
                <div class="wrap-input100 validate-input">
                    @Html.PasswordFor(model => model.password, new { placeholder = "Enter Password", htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })



                <div class="container-login100-form-btn">
                    <div class="wrap-login100-form-btn">
                        <div class="login100-form-bgbtn"></div>
                        <button class="login100-form-btn">
                            Register
                        </button>

                    </div>
                </div>

                <div class="text-center p-t-115" style="margin-top:-81px">
                    <span class="txt1">
                        Already have an account?
                    </span>

                    @Html.ActionLink("Login", "Login")
                </div>
            }
        </div>
    </div>
</div>



@*

    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mobile_no, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mobile_no, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobile_no, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
