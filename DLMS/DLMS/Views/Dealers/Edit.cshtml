@model DLMS.Models.Dealer

@{
    ViewBag.Title = "Edit";
}
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">




                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.d_id)
                    <span class="login100-form-title p-b-26">
                        Edit User
                    </span>
                    <span class="login100-form-title p-b-48">
                        <i class="zmdi zmdi-font"></i>
                    </span>


                    <div class="wrap-input100 validate-input">

                        @Html.EditorFor(model => model.company_name, new { htmlAttributes = new { @class = "input100" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.company_name, "", new { @class = "text-danger" })
                        <div class="wrap-input100 validate-input">
                            @Html.EditorFor(model => model.d_address, new { htmlAttributes = new { @class = "input100" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.d_address, "", new { @class = "text-danger" })
                            <div class="wrap-input100 validate-input">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "input100" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                <div class="wrap-input100 validate-input">
                                    @Html.EditorFor(model => model.contact_no, new { htmlAttributes = new { @class = "input100" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.contact_no, "", new { @class = "text-danger" })
                                    <div class="wrap-input100 validate-input">
                                        @Html.TextBoxFor(model => model.password, new { htmlAttributes = new { @class = "input100" } })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })

                                        <div class="container-login100-form-btn">
                                            <div class="wrap-login100-form-btn">
                                                <div class="login100-form-bgbtn"></div>
                                                <button class="login100-form-btn">
                                                    Edit
                                                </button>

                                            </div>
                                        </div>
                                        }
                                    </div>
                                </div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
